@using FootballBet.Shared.Models.Match
@using FootballBet.Client.Services
@inject IMatchService MatchService;
<MudPaper>
    <MudList>
        <div align="center">
            <MudText>Group Games</MudText>
        </div>
        @foreach (var match in _groupMatches1)
        {
            <MudListItem>
                <MatchComponent MatchData="@match"></MatchComponent>
            </MudListItem>
        }
        <div align="center">
            <MudText>8th Finals</MudText>
        </div>
        @foreach (var match in _eighthFinals)
        {
            <MudListItem>
                <MatchComponent MatchData="@match"></MatchComponent>
            </MudListItem>
        }
        <div align="center">
            <MudText>Quarter Finals</MudText>
        </div>
        @foreach (var match in _quarterFinals)
        {
            <MudListItem>
                <MatchComponent MatchData="@match"></MatchComponent>
            </MudListItem>
        }
        <div align="center">
            <MudText>Semi Finals</MudText>
        </div>
        @foreach (var match in _semiFinals)
        {
            <MudListItem>
                <MatchComponent MatchData="@match"></MatchComponent>
            </MudListItem>
        }
        <div align="center">
            <MudText>Final</MudText>
        </div>
        @foreach (var match in _final)
        {
            <MudListItem>
                <MatchComponent MatchData="@match"></MatchComponent>
            </MudListItem>
        }
    </MudList>
</MudPaper>

@code {
    IEnumerable<MatchDto>? _matches;
    IEnumerable<MatchDto>? _groupMatches1;
    IEnumerable<MatchDto>? _groupMatches2;
    IEnumerable<MatchDto>? _eighthFinals;
    IEnumerable<MatchDto>? _quarterFinals;
    IEnumerable<MatchDto>? _semiFinals;
    IEnumerable<MatchDto>? _final;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        // _matches = new List<MatchDto>
        // {
        //     new()
        //     {
        //         Date = DateTime.Now,
        //         Round = "Group Stage - 1",
        //         MatchStatus = "Match Finished",
        //         AwayCurrentGoals = 1,
        //         AwayFulltimeGoals = 1,
        //         HomeCurrentGoals = 2,
        //         HomeFulltimeGoals = 2,
        //         AwayPenaltyGoals = 1,
        //         HomePenaltyGoals = 1,
        //         AwayTeamName = "France",
        //         AwayTeamLogo = "https://media.api-sports.io/football/teams/2.png",
        //         HomeTeamLogo = "https://media.api-sports.io/football/teams/26.png",
        //         HomeTeamName = "Argentina"
        //     }
        // };
        _matches = await MatchService.GetMatchesAsync();

        _groupMatches1 = _matches?.Where(m => m.Round == "Group Stage - 1").ToList();
        _groupMatches2 = _matches?.Where(m => m.Round == "Group Stage - 2").ToList();
        _eighthFinals = _matches?.Where(m => m.Round == "8th Finals").ToList();
        _quarterFinals = _matches?.Where(m => m.Round == "Quarter-finals").ToList();
        _semiFinals = _matches?.Where(m => m.Round == "Semi-finals").ToList();
        _final = _matches?.Where(m => m.Round == "Final").ToList();
    }

}