@page "/seedDatabase"
@using FootballBet.Shared.Models.Admin
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http
@attribute [Authorize]

<PageTitle>Seed Database</PageTitle>


<EditForm Model="@Seed" OnValidSubmit="SeedDatabaseBtn">
    <MudCard Elevation="25" Class="rounded-lg pb-4">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5" Align="Align.Center">Seed Database</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField Label="Year" 
                          @bind-Value="Seed.Year" For="@(() => Seed.Year)" />
            <MudNumericField Label="League Id" Class="mt-3" @bind-Value="Seed.LeagueId" For="@(() => Seed.LeagueId)" />
        </MudCardContent>
        <MudCardActions>
            @if (!RequestIsPending)
            {
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Click to seed DB</MudButton>
            }
            else
            {
                <MudProgressCircular Color="Color.Primary" Class="ml-auto" Indeterminate="true" />
            }
        </MudCardActions>
    </MudCard>

</EditForm>

@if (Result is not null)
{
    <p>@Result</p>
}


@code {
    private string? Result { get; set; }
    private SeedTeamsAndFixturesShared Seed { get; set; } = new();
    private bool RequestIsPending = false;

    async Task SeedDatabaseBtn()
    {
        RequestIsPending = true;
        var response = await Http.PostAsJsonAsync($"/FootballLeague/seed", Seed);
        if (response.IsSuccessStatusCode)
        {
            Result = await response.Content.ReadAsStringAsync();
        }
        RequestIsPending = false;
        StateHasChanged();
    }
}
