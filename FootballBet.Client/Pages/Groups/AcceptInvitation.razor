@page "/invitation/{invitationId}/{groupId}"
@using FootballBet.Shared.Models.Groups
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using FootballBet.Shared
@inject NavigationManager navigationManager
@attribute [Authorize]
@inject HttpClient Http

<PageTitle>Accept invitation</PageTitle>


@{
    if (BettingGroup is not null)
    {
        <MudText Typo="Typo.h5">You have been invited to join @BettingGroup.Name</MudText>
    }
    else
    {
        <MudProgressCircular Color = "Color.Primary" Align = "Align.Center" Style = "height:70px;width:70px;" Indeterminate = "true" />
    }
}
<MudButton ButtonType="ButtonType.Submit" @onclick="OnAccept" Variant=" Variant.Filled" Color="Color.Primary" Class="ml-auto">Accept invitation</MudButton>

@code {

    [Parameter]
    public string? InvitationId { get; set; }
    [Parameter]
    public string? GroupId { get; set; }

    public BettingGroupShared? BettingGroup { get; set; }

    protected async Task OnAccept()
    {
        try
        {
            var result = await Http.PostAsJsonAsync<BettingGroupInvitationAcceptShared>($"/group/invitation/accept/", new BettingGroupInvitationAcceptShared() { InvitationId = this.InvitationId, GroupId = this.GroupId });
            if (result.IsSuccessStatusCode)
            {
                navigationManager.NavigateTo($"/bettingGroup/{GroupId}");
            }

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (this.GroupId is not null)
            BettingGroup = await Http.GetFromJsonAsync<BettingGroupShared>($"/group/{this.GroupId}/");
    }
}