@using FootballBet.Shared.Models.Match
@using FootballBet.Shared.Models.Odds
@using FootballBet.Client.Services
@inject IOddsService OddsService;

<MudPaper Elevation="2" Style="margin-top: 10px">
    <MudExpansionPanel @bind-IsExpanded="_isOpen" @onclick="GetOddsForGame" HideIcon="true">
        <TitleContent>
            <MudGrid>
                <MudItem xs="3" Style="display: flex; flex-direction: column; justify-content: center; align-items: center">
                    <MudText>@MatchData.HomeTeamName</MudText>
                    <MudImage Src="@MatchData.HomeTeamLogo" Width="Width" Height="Height"></MudImage>
                </MudItem>
                <MudItem xs="6" Style="display: flex; justify-content: center; align-items: center">
                    <MudItem style="display: block">
                        <MudText Style="text-align: center">@MatchData.Date.ToString("H:mm")</MudText>
                        <MudText Style="text-align: center">@MatchData.HomeCurrentGoals - @MatchData.AwayCurrentGoals</MudText>
                    </MudItem>
                </MudItem>
                <MudItem xs="3" Style="display: flex; flex-direction: column; justify-content: center; align-items: center">
                    <MudText>@MatchData.AwayTeamName</MudText>
                    <MudImage Src="@MatchData.AwayTeamLogo" Width="Width" Height="Height"></MudImage>
                </MudItem>
            </MudGrid>
        </TitleContent>
        <ChildContent>
            <MudText Style="padding-top: 10px">@(MatchData.MatchStatus)</MudText>
                @if(Odds != null){
                    <OddsComponent Odds="Odds"></OddsComponent>
                }
            </ChildContent>
        </MudExpansionPanel>
    </MudPaper>

    @code {
    [Parameter]
    public MatchDto MatchData { get; set; }
    private List<OddsDto>? Odds { get; set; }

    bool _isOpen;
    bool HasLoadedOddsForGame;

    private static int Width => 50;
    private int Height => 50;

    private async void GetOddsForGame()
    {
        if (!HasLoadedOddsForGame)
        {
            Odds = (await OddsService.GetOdds(MatchData.MatchId) ?? Array.Empty<OddsDto>()).ToList();
            StateHasChanged();
        }
        HasLoadedOddsForGame = true;
    }
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

}