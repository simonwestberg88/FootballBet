@using FootballBet.Client.Helpers
@using FootballBet.Shared.Models.Bets
@using FootballBet.Shared.Models.Match


<MudSimpleTable Style="display: flex; flex-direction: row">
    <thead>
        <tr>
            <th>Nickname</th>
            <th>Bet</th>
            <th>Base win</th>
            <th>Max win</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var bet in UserBets?.OrderBy(u => u.Nickname))
        {

            <tr bgcolor="@BetHelper.GetBackGroundColorDependingOnStatus(Match, bet.BetDto)">
                <td>@($"{bet?.Nickname}")</td>
                <td>@(bet.BetDto.HomeGoals)&nbsp-&nbsp@(bet.BetDto.AwayGoals)</td>
                @if (@MatchHelper.GetTypeOfWin(Match, bet.BetDto) == "exact" && Match.MatchStatus == "Match Finished")
                {
                    <td><del>@bet.BetDto.PotentialBaseWin</del></td>
                    <td><ins>@bet.BetDto.PotentialWin</ins></td>
                }
                else if (@MatchHelper.GetTypeOfWin(Match, bet.BetDto) == "base" && Match.MatchStatus == "Match Finished")
                {
                    <td><ins>@bet.BetDto.PotentialBaseWin</ins></td>
                    <td><del>@bet.BetDto.PotentialWin</del></td>
                }
                else if (@MatchHelper.GetTypeOfWin(Match, bet.BetDto) == "lost" && Match.MatchStatus == "Match Finished")
                {
                    <td><del>@bet.BetDto.PotentialBaseWin</del></td>
                    <td><del>@bet.BetDto.PotentialWin</del></td>
                }
                else
                {
                    <td>@bet.BetDto.PotentialBaseWin</td>
                    <td>@bet.BetDto.PotentialWin</td>
                }
            </tr>
        }
    </tbody>
</MudSimpleTable>


@code {
    [CascadingParameter(Name = "Match")]
    public MatchDto Match { get; set; }
    [CascadingParameter(Name = "UserBets")]
    public List<GroupVisibleBetDto>? UserBets { get; set; }
}