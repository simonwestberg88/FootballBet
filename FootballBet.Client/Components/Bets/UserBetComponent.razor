@using FootballBet.Client.Helpers
@using FootballBet.Shared.Models.Bets
@using FootballBet.Shared.Models.Match


<MudSimpleTable Style="display: flex; flex-direction: row">
    <thead>
        <tr>
            <th>Your bet</th>
            <th>Base win</th>
            <th>Max win</th>
        </tr>
    </thead>
    <tbody>
        @if (UserBet is not null)
        {
            <tr bgcolor="@BetHelper.GetBackGroundColorDependingOnStatus(Match, (BetResponse)UserBet)">
                <td>@($"{UserBet?.HomeGoals} - {UserBet?.AwayGoals}")</td>
                @if (@MatchHelper.GetTypeOfWin(Match, (BetResponse)UserBet) == "exact" && Match.MatchStatus == "Match Finished")
                {
                    <td><del>@string.Format("{0:0}", UserBet?.PotentialBaseWin)</del></td>
                    <td><ins>@string.Format("{0:0}", UserBet?.PotentialWin)</ins></td>
                }
                else if (@MatchHelper.GetTypeOfWin(Match, (BetResponse)UserBet) == "base" && Match.MatchStatus == "Match Finished")
                {
                    <td><ins>@string.Format("{0:0}", UserBet?.PotentialBaseWin)</ins></td>
                    <td><del>@string.Format("{0:0}", UserBet?.PotentialWin)</del></td>
                }
                else if (@MatchHelper.GetTypeOfWin(Match, (BetResponse)UserBet) == "lost" && Match.MatchStatus == "Match Finished")
                {
                    <td><del>@string.Format("{0:0}", UserBet?.PotentialBaseWin)</del></td>
                    <td><del>@string.Format("{0:0}", UserBet?.PotentialWin)</del></td>
                }
                else
                {
                    <td>@string.Format("{0:0}", UserBet?.PotentialBaseWin)</td>
                    <td>@string.Format("{0:0}", UserBet?.PotentialWin)</td>
                }
            </tr>
        }
    </tbody>
</MudSimpleTable>


@code {

    [Parameter]
    public BetResponse? UserBet { get; set; }
    [Parameter]
    public string? BaseWinString { get; set; }
    [Parameter]
    public MatchDto Match { get; set; }
}